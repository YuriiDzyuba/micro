version: '3,8'

services:
  main-service:
    container_name: main-service
    build: .
    command: npm run start:dev
    environment:
      - SERVICE_PORT=${SERVICE_PORT}
      - SERVICE_HOST=${SERVICE_HOST}
      - SERVICE_GLOBAL_PREFIX=${SERVICE_GLOBAL_PREFIX}
      - SERVICE_NAME=${SERVICE_NAME}
      - TYPEORM_CONNECTION=${TYPEORM_CONNECTION}
      - TYPEORM_USERNAME=${TYPEORM_USERNAME}
      - TYPEORM_PASSWORD=${TYPEORM_PASSWORD}
      - TYPEORM_DATABASE=${TYPEORM_DATABASE}
      - TYPEORM_HOST=postgres
      - TYPEORM_PORT=${TYPEORM_PORT}
    networks:
      - main-network
      - app-network
    volumes:
      - ./src:/app/src
    ports:
      - ${SERVICE_PORT}:${SERVICE_PORT}
    depends_on:
      - postgres
    restart: unless-stopped

  postgres:
    container_name: main-postgres
    image: postgres:14.0-alpine
    restart: always
    environment:
      - POSTGRES_USER=${TYPEORM_USERNAME}
      - POSTGRES_PASSWORD=${TYPEORM_PASSWORD}
      - POSTGRES_DB=${TYPEORM_DATABASE}
    networks:
      - app-network
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    ports:
      - ${TYPEORM_PORT}:${TYPEORM_PORT}

networks:
  app-network:
    external:
      name: micro-app-network
  main-network:
    driver: bridge